name: owasp_zap

on:
  workflow_dispatch:
  workflow_call:

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: Scan the web application
    steps:
    
      - name: Checkout project
        uses: actions/checkout@v4
  
      - name: Download image
        uses: ishworkh/container-image-artifact-download@v2.0.0
        with:
          image: "${{ secrets.DOCKER_USERNAME }}/log8100_tp3:latest"

      - name: Set up custom hosts
        run: echo "127.0.0.1 www.webgoat.local www.webwolf.local" | sudo tee -a /etc/hosts

      - name: Use Docker to start the application locally
        run: |
          docker run -d \
            -p 8080:8080 \
            -p 9090:9090 \
            -e WEBGOAT_HOST=www.webgoat.local \
            -e WEBWOLF_HOST=www.webwolf.local \
            ${{ secrets.DOCKER_USERNAME }}/log8100_tp3:latest
        
      - name: Change wait-for-it permissions
        run: chmod +x wait-for-it.sh
        
      - name: Wait for the application on port 8080
        run: ./wait-for-it.sh www.webgoat.local:8080 --timeout=60 -- echo "WebGoat is ready on port 8080!"

      - name: Wait for the application on port 9090
        run: ./wait-for-it.sh www.webwolf.local:9090 --timeout=60 -- echo "WebWolf is ready on port 9090!"

      - name: ZAP Scan on WebGoat (port 8080)
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: "http://www.webgoat.local:8080/WebGoat"
          artifact_name: "zap_results_8080"

      - name: ZAP Scan on WebWolf (port 9090)
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: "http://www.webwolf.local:9090/WebWolf"
          artifact_name: "zap_results_9090"
          
      - name: Upload ZAP results
        uses: actions/upload-artifact@v3
        with:
          name: zap_results
          path: report_html.html
